[{"D:\\shopit\\frontend\\src\\index.js":"1","D:\\shopit\\frontend\\src\\App.js":"2","D:\\shopit\\frontend\\src\\components\\redux\\store.js":"3","D:\\shopit\\frontend\\src\\components\\redux\\reducers\\productsReducer.js":"4","D:\\shopit\\frontend\\src\\components\\Home.jsx":"5","D:\\shopit\\frontend\\src\\components\\layout\\Footer.jsx":"6","D:\\shopit\\frontend\\src\\components\\layout\\Header.jsx":"7","D:\\shopit\\frontend\\src\\components\\redux\\constants\\productConstant.js":"8","D:\\shopit\\frontend\\src\\components\\redux\\actions\\productActions.js":"9","D:\\shopit\\frontend\\src\\components\\layout\\MetaData.jsx":"10","D:\\shopit\\frontend\\src\\components\\product\\Product.jsx":"11","D:\\shopit\\frontend\\src\\components\\layout\\Loader.jsx":"12","D:\\shopit\\frontend\\src\\components\\product\\ProductDetails.jsx":"13","D:\\shopit\\frontend\\src\\components\\layout\\Search.jsx":"14","D:\\shopit\\frontend\\src\\components\\redux\\reducers\\userReducers.js":"15","D:\\shopit\\frontend\\src\\components\\redux\\constants\\userConstants.js":"16","D:\\shopit\\frontend\\src\\components\\user\\Login.jsx":"17","D:\\shopit\\frontend\\src\\components\\redux\\actions\\userActions.js":"18","D:\\shopit\\frontend\\src\\components\\user\\Register.jsx":"19","D:\\shopit\\frontend\\src\\components\\user\\UpdateProfile.jsx":"20","D:\\shopit\\frontend\\src\\components\\user\\Profile.jsx":"21","D:\\shopit\\frontend\\src\\components\\Route\\ProtectedRoute.jsx":"22","D:\\shopit\\frontend\\src\\components\\user\\UpdatePassword.jsx":"23"},{"size":634,"mtime":1654713723420,"results":"24","hashOfConfig":"25"},{"size":1629,"mtime":1655033974780,"results":"26","hashOfConfig":"25"},{"size":697,"mtime":1655033306506,"results":"27","hashOfConfig":"25"},{"size":1704,"mtime":1654875904171,"results":"28","hashOfConfig":"25"},{"size":7269,"mtime":1655029776073,"results":"29","hashOfConfig":"25"},{"size":328,"mtime":1654674195947,"results":"30","hashOfConfig":"25"},{"size":4141,"mtime":1654956585038,"results":"31","hashOfConfig":"25"},{"size":423,"mtime":1654715116492,"results":"32","hashOfConfig":"25"},{"size":1624,"mtime":1655033269257,"results":"33","hashOfConfig":"25"},{"size":218,"mtime":1654682665238,"results":"34","hashOfConfig":"25"},{"size":1524,"mtime":1654872584790,"results":"35","hashOfConfig":"25"},{"size":140,"mtime":1655033254607,"results":"36","hashOfConfig":"25"},{"size":6035,"mtime":1655030441858,"results":"37","hashOfConfig":"25"},{"size":1036,"mtime":1654868538216,"results":"38","hashOfConfig":"25"},{"size":2454,"mtime":1655033838838,"results":"39","hashOfConfig":"25"},{"size":1144,"mtime":1654968854403,"results":"40","hashOfConfig":"25"},{"size":3259,"mtime":1654945780069,"results":"41","hashOfConfig":"25"},{"size":3948,"mtime":1655033909592,"results":"42","hashOfConfig":"25"},{"size":5791,"mtime":1654948837327,"results":"43","hashOfConfig":"25"},{"size":4343,"mtime":1655009869596,"results":"44","hashOfConfig":"25"},{"size":2063,"mtime":1655011743994,"results":"45","hashOfConfig":"25"},{"size":772,"mtime":1655009137493,"results":"46","hashOfConfig":"25"},{"size":2635,"mtime":1655034009446,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"3uhbkp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\shopit\\frontend\\src\\index.js",[],["97","98"],"D:\\shopit\\frontend\\src\\App.js",[],"D:\\shopit\\frontend\\src\\components\\redux\\store.js",[],"D:\\shopit\\frontend\\src\\components\\redux\\reducers\\productsReducer.js",[],"D:\\shopit\\frontend\\src\\components\\Home.jsx",[],"D:\\shopit\\frontend\\src\\components\\layout\\Footer.jsx",[],"D:\\shopit\\frontend\\src\\components\\layout\\Header.jsx",[],"D:\\shopit\\frontend\\src\\components\\redux\\constants\\productConstant.js",[],"D:\\shopit\\frontend\\src\\components\\redux\\actions\\productActions.js",[],"D:\\shopit\\frontend\\src\\components\\layout\\MetaData.jsx",[],"D:\\shopit\\frontend\\src\\components\\product\\Product.jsx",[],"D:\\shopit\\frontend\\src\\components\\layout\\Loader.jsx",[],"D:\\shopit\\frontend\\src\\components\\product\\ProductDetails.jsx",[],"D:\\shopit\\frontend\\src\\components\\layout\\Search.jsx",[],"D:\\shopit\\frontend\\src\\components\\redux\\reducers\\userReducers.js",[],"D:\\shopit\\frontend\\src\\components\\redux\\constants\\userConstants.js",[],"D:\\shopit\\frontend\\src\\components\\user\\Login.jsx",[],"D:\\shopit\\frontend\\src\\components\\redux\\actions\\userActions.js",["99","100"],"import axios from \"axios\";\r\n\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_USER_REQUEST,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAIL,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_RESET,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PASSWORD_REQUEST,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_RESET,\r\n  UPDATE_PASSWORD_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/userConstants\";\r\n\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Update profile\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//clear Error\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n\r\n\r\n// Register user\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update password\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n","D:\\shopit\\frontend\\src\\components\\user\\Register.jsx",[],"D:\\shopit\\frontend\\src\\components\\user\\UpdateProfile.jsx",["101"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateProfile,\r\n  loadUser,\r\n  clearErrors,\r\n} from \"../redux/actions/userActions\";\r\nimport { UPDATE_PROFILE_RESET } from \"../redux/constants/userConstants\";\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\r\n    \"/images/default_avatar.jpg\"\r\n  );\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setAvatarPreview(user.avatar.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"User updated successfully\");\r\n      dispatch(loadUser());\r\n\r\n      history.push(\"/me\");\r\n\r\n      dispatch({\r\n        type: UPDATE_PROFILE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"name\", name);\r\n    formData.set(\"email\", email);\r\n    formData.set(\"avatar\", avatar);\r\n\r\n    dispatch(updateProfile(formData));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatarPreview(reader.result);\r\n        setAvatar(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return (\r\n    <>\r\n      <MetaData title={\"Update Profile\"} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form\r\n            className=\"shadow-lg\"\r\n            onSubmit={submitHandler}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"avatar_upload\">Avatar</label>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div>\r\n                  <figure className=\"avatar mr-3 item-rtl\">\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"Avatar Preview\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    accept=\"image/*\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn update-btn btn-block mt-4 mb-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;","D:\\shopit\\frontend\\src\\components\\user\\Profile.jsx",[],"D:\\shopit\\frontend\\src\\components\\Route\\ProtectedRoute.jsx",[],"D:\\shopit\\frontend\\src\\components\\user\\UpdatePassword.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":17,"column":3,"nodeType":"108","messageId":"109","endLine":17,"endColumn":23},{"ruleId":"106","severity":1,"message":"110","line":21,"column":3,"nodeType":"108","messageId":"109","endLine":21,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":50,"column":6,"nodeType":"113","endLine":50,"endColumn":50,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'UPDATE_PROFILE_RESET' is defined but never used.","Identifier","unusedVar","'UPDATE_PASSWORD_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"120","text":"121"},[1284,1328],"[dispatch, alert, error, history, isUpdated, user]"]